apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "TicketType.Microservice.Template.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    revision: {{ required "Revision tag is required" .Values.revision | quote }}
    {{- include "TicketType.Microservice.Template.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "TicketType.Microservice.Template.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "TicketType.Microservice.Template.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "TicketType.Microservice.Template.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ required "Image tag is required" .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or (.Values.health.enabled) (.Values.serviceMonitor.port) }}
          ports:
            {{- if .Values.health.enabled }}
            - name: {{ required "Health port name is required" .Values.health.portName }}
              containerPort: {{ required "Health port is required" .Values.health.targetPort }}
              protocol: TCP
            {{- end }}
            {{- if .Values.serviceMonitor.enabled }}
            - name: {{ required "Service monitor port name is required" .Values.serviceMonitor.portName }}
              containerPort: {{ required "Service monitor port is required" .Values.serviceMonitor.targetPort }}
              protocol: TCP
            {{- end }}
          {{- end }}
          {{- if .Values.health.enabled }}
          {{- with .Values.health }}
          livenessProbe:
            httpGet:
              path: {{ required "Health path is required" .path }}
              port: {{ required "Health port name is required" .portName }}
            initialDelaySeconds: {{ .livenessProbe.initialDelaySeconds | default 10 }}
            periodSeconds: {{ .livenessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .livenessProbe.timeoutSeconds | default 1 }}
          readinessProbe:
            httpGet:
              path: {{ required "Health path is required" .path }}
              port: {{ required "Health port name is required" .portName }}
            initialDelaySeconds: {{ .readinessProbe.initialDelaySeconds | default 10 }}
            periodSeconds: {{ .readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .readinessProbe.timeoutSeconds | default 1 }}
          {{- end }}
          {{- end }}
          env:
            {{- with .Values.envVars }}
            - name: AWS_REGION
              value: {{ required "The AWS region is required" .awsRegion | quote }}
            - name: SQS__QueueUrl
              value: {{ required "The incoming SQS queue URL is Required" .SQS.QueueUrl | quote }}
            - name: OutgoingSNSTopicName
              value: {{ required "The outgoing SNS topic name is Required" .SNS.OutgoingTopicName | quote }}
            - name: MessagePublisher__SnsTopics__Outgoing
              value: {{ required "The outgoing Ticketing SNS Topic Arn is Required" .SNS.OutgoingTopicArn | quote }}
            - name: LaunchDarkly__Key
              value: {{ required "The LaunchDarkly Key is Required" .launchDarkly.Key | quote }}
            - name: LaunchDarkly__Username
              value: {{ required "The LaunchDarkly UserName is Required" .launchDarkly.UserName | quote }}
            - name: EPSAGON_TOKEN
              value: {{ required ".epsagonToken is required" .epsagonToken | quote }}
            - name: EPSAGON_APP_NAME
              value: {{ required ".epsagonAppName is required" .epsagonAppName | quote }}
            - name: EntityApi__BaseAddress
              value: {{ required ".entityApiBaseAddress is required " .entityApiBaseAddress | quote}}
            - name: EntityApi__UserAgent
              value: {{ required ".entityApiUserAgent is required " .entityApiUserAgent | quote}}
            - name: TractorApi__ResourcePath
              value: {{ required ".entityApiTractorPath is required " .entityApiTractorPath | quote}}
            - name: DriverApi__ResourcePath
              value: {{ required ".entityApiDriverPath is required " .entityApiDriverPath | quote}}
            - name: HometimeApi__ResourcePath
              value: {{ required ".entityApiHometimePath is required " .entityApiHometimePath | quote}}
            - name: OrderApi__ResourcePath
              value: {{ required ".entityApiOrderPath is required " .entityApiOrderPath | quote}}
            {{- end}}
            {{- with .Values.health }}
            - name: HEALTHCHECKS__ENABLED
              value: {{ .enabled | quote }}
            {{- if .enabled }}
            - name: HEALTHCHECKS__SERVER__HOSTNAME
              value: {{ .matchedHost }}
            - name: HEALTHCHECKS__SERVER__PORT
              value: {{ .targetPort | quote }}
            - name: HEALTHCHECKS__SERVER__PATH
              value: {{ .path }}
            - name: HEALTHCHECKS__SERVER__PROTOCOL
              value: {{ .protocol }}
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
